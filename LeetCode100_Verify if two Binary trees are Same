# https://leetcode.com/problems/same-tree/
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None



class Solution(object):
    def isSameTree(self, p, q):
        
        if p==None and q==None:
            return True
        if p!=None and q==None:
            return False
        if p==None and q!=None:
            return False
        return p.val == q.val and self.isSameTree(p.left,q.left) and self.isSameTree(p.right , q.right) 
        
""" Method 2 
        :type p: TreeNode
        :type q: TreeNode
        :rtype: bool
        
        res1=[]
        res2=[]
        self.dfs(p,res1)
        self.dfs(q,res2)
        
        if(p.val==q.val):
            return True
        
        if(str(res1)==str(res2)):
            return True
        else:
            return False
        
            
    def dfs(self,root,res):
        if 
        if root:
            res.append(root.val)
            self.dfs(root.left,res)
            self.dfs(root.right,res)
        
    
"""
        
