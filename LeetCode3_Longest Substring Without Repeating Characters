class Solution(object):
    def lengthOfLongestSubstring(self, s):
        """
        :type s: str
        :rtype: int
        """
        
        left=right=ans=0
        myset=set()
        while right<len(s):
            if s[right] not in myset:
                myset.add(s[right])
                right=right+1
                ans=max(ans,right-left)
            else:
                myset.remove(s[left])
                left=left+1
        return ans
        
        
        
        
        
        
"""        
        d={}
        res=start = 0
        
        for i, ch in enumerate(s):
            print(i,ch)
            if ch in d:
                
                start = max(start, d[ch]+1)
            res = max(res, i-start+1) 
            d[ch] = i
            print(d)
            
        return res

        length=[]
        
       
        if len(s)>=1:
            list_of_str=self.substring(s)
            for j in list_of_str:
                j=set(j)
                length.append(len(j))
            return(max(length))
        else:
            return 0
        
    
    def substring(self,s):
        res=[]
        for i in range(len(s)):
            for length in range(i+1,len(s)-i+1):
                res.append(s[i:i+length])
        print(res)
        return res
"""
        
   
        
