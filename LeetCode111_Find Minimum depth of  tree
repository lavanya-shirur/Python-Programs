# https://leetcode.com/problems/minimum-depth-of-binary-tree/

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def minDepth(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        if root == None:
            return 0
        
        #if root is leaf node then return the maximum value of leaves  
        if root.left ==None or root.right==None:
            left=self.minDepth(root.left)
            right=self.minDepth(root.right)
            return 1+max(left,right)
        
        else:
            left=self.minDepth(root.left)
            right=self.minDepth(root.right)
            return 1+min(left,right)
        
